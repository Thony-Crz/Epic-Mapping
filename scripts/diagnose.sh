#!/bin/bash

# Script de diagnostic avanc√© pour Epic Mapping
# Aide √† identifier les probl√®mes de connectivit√©

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo -e "${BLUE}üîß Diagnostic avanc√© Epic Mapping${NC}"
echo ""

# Test de connectivit√© r√©seau interne
log_info "Test de connectivit√© r√©seau interne..."

if docker ps --filter "name=epicmapping-api" --filter "status=running" | grep -q epicmapping-api; then
    log_info "Test de r√©solution DNS postgres depuis l'API..."
    if docker exec epicmapping-api getent hosts postgres >/dev/null 2>&1; then
        log_success "DNS postgres r√©solu depuis l'API"
    else
        log_error "DNS postgres non r√©solu depuis l'API"
    fi
    
    log_info "Variables d'environnement de l'API..."
    docker exec epicmapping-api printenv | grep -E "(ConnectionStrings|JWT)" || log_warning "Variables d'environnement manquantes"
    
    log_info "Logs r√©cents de l'API..."
    docker logs epicmapping-api --tail 15
else
    log_error "Conteneur API non trouv√©"
fi

echo ""

if docker ps --filter "name=epicmapping-postgres" --filter "status=running" | grep -q epicmapping-postgres; then
    log_info "Test de connectivit√© PostgreSQL..."
    if docker exec epicmapping-postgres pg_isready -U epicmapping_user -d EPICMAPPING; then
        log_success "PostgreSQL accepte les connexions"
    else
        log_error "PostgreSQL refuse les connexions"
    fi
    
    log_info "Logs r√©cents de PostgreSQL..."
    docker logs epicmapping-postgres --tail 10
else
    log_error "Conteneur PostgreSQL non trouv√©"
fi

echo ""
log_info "R√©sum√© des recommandations:"
echo "1. V√©rifier que les conteneurs sont sur le m√™me r√©seau"
echo "2. V√©rifier la r√©solution DNS entre conteneurs"
echo "3. V√©rifier les variables d'environnement de connexion"
echo "4. Consulter les logs pour des erreurs sp√©cifiques"
